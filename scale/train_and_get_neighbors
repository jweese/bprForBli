#!/bin/bash
#$ -cwd
#$ -l mem_free=10g
#$ -l num_proc=16
#$ -l h_rt=0:40:00
#$ -S /bin/bash
source activate bpr

set -u
set -e
set -x

code=/home/hltcoe/jweese/src/bprForBli/scale
vecname=vecs

src=$1
tgt=$2
dict=$3

topN=10

get_vector_words() {
  awk 'NF > 2 { print $1; }' "$@"
}

has_dimensions() {
  awk 'NR == 1 { if (NF == 2) { exit 0; } else { exit 1; }}' "$@"
}

cut_multitoken_words() {
  if has_dimensions "$1"; then
    python "$code"/cut_multitoken_words.py <"$1" >"$2"
  else
    ln -sf "$1" "$2"
  fi
}

cut_multitoken_words "$src" src.in
cut_multitoken_words "$tgt" tgt.in

python "$code"/train_bilingual_embeddings.py \
  --english tgt.in \
  --foreign src.in \
  --dict "$dict" \
  --to_project tgt.in \
  --gentestfile testset \
  --verbose \
  | paste -d' ' <(get_vector_words tgt.in) - >"$vecname".tgt.txt
ln -sf src.in "$vecname".src.txt

vecs=("$vecname".{src,tgt}.txt)
for v in "${vecs[@]}"; do
  TMPDIR=/scratch python -m pymagnitude.converter \
    -i "$v" -o "${v/%txt/magnitude}"
done

TMPDIR=/scratch python "$code"/get_neighbors.py \
  "${vecs[@]/%txt/magnitude}" -n "$topN" \
  < <(cut -f1 testset) >test.out
exec "$code"/accuracy.pl testset test.out >result
